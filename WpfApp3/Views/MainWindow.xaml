<Window x:Class="DevelopmentMode.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfapp3="clr-namespace:DevelopmentMode" 
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:viewmodels="clr-namespace:DevelopmentMode.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
        xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern"
        ui:ThemeManager.IsThemeAware="True"
        ui:WindowHelper.SystemBackdropType="Acrylic10"
        ui:WindowHelper.UseModernWindowStyle="True"
        Name="ThisWindow"
        Title="AcrylicEffect" Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.2*"/>
            <ColumnDefinition Width="1.2*"/>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition Width="1.2*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="{Binding TestText}">
            <TextBlock.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Red"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </TextBlock.Background>
        </TextBlock>
        <DataGrid x:Name="myList"  ItemsSource="{Binding }">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding UserSelectedCmd}" CommandParameter="{Binding SelectedItem ,ElementName=myList}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <ListView ItemsSource="{Binding AcountLists}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding name}"/>
                    <GridViewColumn Header="Value" DisplayMemberBinding="{Binding id}"/>
                    <GridViewColumn Header="Time" DisplayMemberBinding="{Binding time}"/>
                </GridView>
                </ListView.View>
        </ListView>
        <DataGrid Margin="10" Grid.Column="1" ItemsSource="{Binding AcountLists}"  AutoGenerateColumns="True">
        </DataGrid>
        <Button Grid.Column="2" HorizontalAlignment="Center" Content="Read" Command="{Binding Read}">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Blue"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button Grid.Column="3" HorizontalAlignment="Center" Content="TestButton" Background="Red">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseRightButtonUp">
                    <i:InvokeCommandAction Command="{Binding SecondCommand}" 
                                           CommandParameter="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <StackPanel Grid.Column="4">
            <Label Margin="10" Content="{Binding ToggleButtonStata}"/>
            <TextBlock Margin="10" Text="Fluent UI"/>
            <TextBox Margin="10"  Tag="{Binding }" Name="TBX" Text="{Binding TestText}"/>
            <Button Margin="10" Content="Fluent UI"/>
            <ToggleButton Margin="10" Content="Fluent UI" IsChecked="{Binding IsChecked}">
                <i:Interaction.Triggers>
                    <i:EventTrigger   EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding CheckedEvent}"/>
                    </i:EventTrigger>
                    <i:EventTrigger   EventName="Unchecked">
                        <i:InvokeCommandAction Command="{Binding ToggleUnchecked}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ToggleButton>
        </StackPanel>
    </Grid>
</Window>
